- name: Find latest Ubuntu AMI
  amazon.aws.ec2_ami_info:
    owners: ["{{ ami_owner }}"]
    filters:
      name: "{{ ami_name_filter }}"
    region: "{{ aws_region }}"
  register: ami_info

- name: Set AMI ID
  ansible.builtin.set_fact:
    ami_id: "{{ (ami_info.images | sort(attribute='creation_date'))[-1].image_id }}"

- name: Create a security group
  amazon.aws.ec2_security_group:
    name: my-new-security-group
    description: Description for the security group
    rules:
      - proto: tcp
        from_port: 3000
        to_port: 3000
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 9090
        to_port: 9090
        cidr_ip: "{{eks_vpc_cidr}}"
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0 
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
    region: "{{ aws_region }}"  
  register: prom_graf_sg


- name: Launch EC2 instance
  amazon.aws.ec2_instance:
    name: prometheus-grafana
    image_id: "{{ ami_id }}"
    instance_type: "{{ instance_type }}"
    key_name: "{{ aws_key_name }}"
    region: "{{ aws_region }}"
    network:
      assign_public_ip: yes
    wait: true
    state: running
    security_groups:
      - "{{ prom_graf_sg.group_id }}"
  register: ec2

- name: Add new EC2 to inventory
  ansible.builtin.add_host:
    name: prometheus_server
    ansible_host: "{{ ec2.instances[0].public_ip_address }}"
    ansible_user: ubuntu
    ansible_ssh_private_key_file: "{{ aws_ssh_private_key_path }}"
    groups: monitoring

- name: To update packages in server
  ansible.builtin.apt:
    update_cache: yes

